How to use site.h for the PKCS#11 provider of your HSM
------------------------------------------------------

First run pkcs11-tokens (in bin/pkcs11). It is available
when bind9 was configured with the --with-pcks11 flag.
It prints addresses of selected tokens per algorithm:
 - random number generation
 - RSA (sign/verify)
 - DSA (sign/verify)
 - DH (secret derivation)
 - digest (hash)
 - EC (ECDSA, sign/verify)
 - GOST (Russian hash and sign/verify)
 - AES (encrypt/decrypt)
and a summary of found tokens.

Current some well known HSMs are predefined site.h
by HSM "flavors":
 - Thales nCipher (the default)
 - OpenDNSSEC SoftHSMv2
and with an experimental status:
 - OpenDNSSEC SoftHSMv1 with SHA224 support added
 - Cryptech with SHA224 support added

When bind9 was configured with native PKCS#11 support,
pkcs11-tokens (and any bind9 tools using libisc) raises
an error if a mandatory algorithm is not supported,
(usually 0x70 aka CKR_MECHANISM_INVALID, 0x0 means
a required flag was not available) so if there is a
selected token with the 0x0 address:
 - rand or RSA: nothing can be done, i.e.,
  bind9 native PKCS#11 is not supported with this HSM.
 - DSA or DH: run pkcs11-tokens with the -v (verbose) flag.
  If the parameter generation mechanism is not supported
  you can make the token selection to ignore the error.
  Note DSA and DH are not critical, i.e., you can use bind9
  without DSA or DH in production.
 - digest: run pkcs11-tokens with the -v (verbose) flag.
  If the problem is with HMAC mechanisms, use the replace
  flags in site.h. If the problem is with MD5, use the
  corresponding disable flag in site.h. If the problem
  is with SHA224 ask to have this hash algorithm implemented
  in the PKCS#11 provider. For any other problem there is
  nothing to do (for ever: some hash functions return void
  so any internal error is fatal, i.e., crashes), bind9
  native PKCS#11 is not supported with this HSM.
 - EC: doesn't matter but you should configure bind9 without
  ECDSA support, i.e., add --without-ecdsa to configure arguments.
 - GOST: doesn't matter but you should really configure bind9
  without GOST support, i.e., add --without-ecdsa to configure
  arguments (really because GOST includes a hash algorithm).
 - AES: you must reconfigure bind9 without AES support,
  i.e., add --without-aes to configure arguments.

Note you can disable some standard algorithms (DSA, DH and
MD5) and some algorithms are optional (ECDSA, GOST, AES).
If you don't want an optional algorithm you should simply
configure bind9 with it.
Note the proper way to disable DSA is to simply add it
in a "disable-algorithms" clause in the named config file.
Disable removes the support code so can have some
unwanted side effects, for instance to disable DH
deeply breaks TKEY support.
The only algorithm you might want to disable is MD5
(even HMAC-MD5 is safe).
A final note: disable flags in site.h work for OpenSSL
code too but this feature is not officially supported yet
(i.e., please don't rely on it).
