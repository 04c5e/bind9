# Copyright (C) 2004, 2007, 2008, 2010-2016  Internet Systems Consortium, Inc. ("ISC")
# Copyright (C) 2000, 2001  Internet Software Consortium.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

srcdir =	@srcdir@
VPATH =		@srcdir@
top_srcdir =	@top_srcdir@

VERSION=@BIND9_VERSION@

@BIND9_MAKE_INCLUDES@

SUBDIRS =	dlzexternal lwresd rsabigexponent tkey
CINCLUDES =	${ISC_INCLUDES} ${DNS_INCLUDES}

CDEFINES =	@USE_GSSAPI@
CWARNINGS =

DNSLIBS =
ISCLIBS =	../../../lib/isc/libisc.@A@ @ISC_OPENSSL_LIBS@

DNSDEPLIBS =
ISCDEPLIBS =

DEPLIBS =

LIBS =		@LIBS@

OBJS =		feature-test.@O@
SRCS =		feature-test.c

TARGETS =	feature-test@EXEEXT@

@BIND9_MAKE_RULES@

feature-test@EXEEXT@: feature-test.@O@
	${LIBTOOL_MODE_LINK} ${PURIFY} ${CC} ${CFLAGS} ${LDFLAGS} -o $@ feature-test.@O@ ${ISCLIBS} ${LIBS}


# Running the scripts below is bypassed when a separate build directory is
# used.

# Define the tests that can be run in parallel.  This should be identical to
# the definition of PARALLELDIRS in conf.sh.

PARALLEL = allow_query rpzrecurse

# Produce intermediate makefile that assigns unique port numbers to each
# parallel test.  The start port number of 5,000 is arbitrary - it must just
# be greater than the highest privileged port, 1024.
#
# Test names need to be sanitized because Solaris make does not like
# underscores in target names and requires explicit differentiation
# between a target name and a directory name (.PHONY is not supported).

parallel.mk:
	@PARALLEL_SANITIZED=`echo $(PARALLEL) | sed "s|\([^ ][^ ]*\)|test-\1|g;" | tr _ -` ; \
	echo ".PHONY: $$PARALLEL_SANITIZED" > $@ ; \
	echo "" >> $@ ; \
	echo "check: $$PARALLEL_SANITIZED" >> $@ ; \
	port=$${STARTPORT:-5000} ; \
	for directory in $(PARALLEL) ; do \
		echo "" >> $@ ; \
		echo "test-`echo $$directory | tr _ -`:" >> $@ ; \
		echo "	@$(SHELL) ./run.sh $$NOCLEAN -r -p $$port $$directory 2>&1 | tee $$directory/test.output" >> $@ ; \
		port=`expr $$port + 100` ; \
	done

# Targets to run the tests.

test: parallel.mk subdirs
	@$(MAKE) -f parallel.mk check
	@$(SHELL) ./runsequential.sh $$NOCLEAN -r
	@$(SHELL) ./testsummary.sh

# Define the tests that can be run in parallel.  This should be identical to
# the definition of PARALLELDIRS in conf.sh. Note: long-running tests
# such as allow_query and serve-stale are scheduled first to get more
# benefit from parallelism.

PARALLEL = acl additional addzone allow_query autosign \
	   builtin cacheclean chain checkconf checknames \
	   checkzone @CHECKDS@ @COVERAGE@ cookie database \
	   digdelv dlv dlz dlzexternal dns64 dnssec dscp dsdigest \
	   ednscompliance emptyzones fetchlimit filter-aaaa \
	   formerr forward geoip glue inline integrity ixfr \
	   legacy limits logfileconfig masterfile masterformat \
	   metadata notify nslookup nsupdate pending reclimit \
	   redirect resolver rndc rpz rpzrecurse rrchecker rrl \
	   rrsetorder rsabigexponent runtime smartsign sortlist \
	   spf staticstub statistics statschannel stub \
	   tcp tsig tsiggss unknown upforwd verify views wildcard \
	   xfer xferquota zero zonechecks

# Produce intermediate makefile that assigns unique port numbers to each
# parallel test.  The start port number of 5,000 is arbitrary - it must just
# be greater than the highest privileged port, 1024.
#
# Test names need to be sanitized because Solaris make does not like
# underscores in target names and requires explicit differentiation
# between a target name and a directory name (.PHONY is not supported).

.PHONY: parallel.mk

parallel.mk:
	PARALLEL_SANITIZED=`echo $(PARALLEL) | sed "s|\([^ ][^ ]*\)|test-\1|g;" | tr _ -` ; \
	echo ".PHONY: $$PARALLEL_SANITIZED" > $@ ; \
	echo "" >> $@ ; \
	echo "test check: $$PARALLEL_SANITIZED" >> $@ ; \
	port=$${STARTPORT:-5000} ; \
	for directory in $(PARALLEL) ; do \
		echo "" >> $@ ; \
		echo "test-`echo $$directory | tr _ -`:" >> $@ ; \
		echo "	@$(SHELL) ./run.sh $$NOCLEAN -r -p $$port $$directory 2>&1 | tee $$directory/test.output" >> $@ ; \
		port=`expr $$port + 100` ; \
	done

# Targets to run the tests.

test: parallel.mk subdirs
	@$(MAKE) -f parallel.mk check
	@$(SHELL) ./runsequential.sh $$NOCLEAN -r
	@$(SHELL) ./testsummary.sh

check: test

# Other targets:
#
# testclean - delete files generated by running tests.
# clean     - testclean + also delete files built for the tests by "make".
# distclean - clean + also delete test-related files generated by "configure".

testclean clean distclean::
	if test -f ./cleanall.sh; then $(SHELL) ./cleanall.sh; fi
	rm -f systests.output
	rm -f random.data
	rm -f parallel.mk

clean distclean::
	rm -f ${TARGETS}
	rm -f ${OBJS}

distclean::
	rm -f conf.sh

installdirs:

install::

uninstall::
